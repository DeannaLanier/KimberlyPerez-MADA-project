---
title: "Combined Data Cleaning and Statistical Analysis Script for Manuscript: Salmonella Environmental Persistence Informs Management Relevant to Avian and Public Health"
author: "Kimberly M. Perez"
date: "05/01/2023"
output: html_document
---

# **Analysis script**
This script loads the cleaned data, does a simple analysis, and saves the results to the "4. Results" folder

## **Loading Packages**
```{r}
#Load needed packages
library(tidyverse)
library(ggplot2) #for plotting
library(broom) #for cleaning up output from lm()
library(here) #for data loading/saving
library(tidymodels)
library(tidyr)
library(gtsummary)
library(dplyr)
library(vip)
library(performance)
library(jtools)
library(broom)
library(broom.mixed)
```

## **1. Loading: Picnic Table & Feeder Data**
```{r}
#Picnic Table Data
PT_Data<- readRDS(here::here("2. Clean Data","PTprocessed.rds"))

#Feeder Data 
FD_Data <-readRDS(here::here("2. Clean Data","FDprocessed.rds"))

glimpse(PT_Data)

glimpse (FD_Data)
```
# 2. **Data Fitting/Statistical Analysis: Picnic Table**
Let's Begin with some Linear Model Fitting; I will try this multiple ways, with several predictors.
```{r}
lmog<-linear_reg() %>% 
  set_engine("lm")

lmfit_PT<- lmog %>% #Training; outcome: Salmonella Pos and Main Predictor Table
  fit(Salmonella_Positive~Table, PT_Data) 

lmfit_PT

glimpse(lmfit_PT)

#Way 1
glance(lmfit_PT)

#Way 2
tidy(lmfit_PT)

plot_summs(lmfit_PT)

#Fitting other specific indicators
lmog_1<-linear_reg() %>% 
  set_engine("lm")

lmfit_PT1<- lmog_1 %>% #Training; outcome: Salmonella Pos and Main Predictor Table
  fit(Salmonella_Positive~Original_Persistence_Pile+Table, PT_Data) 

lmfit_PT1

glimpse(lmfit_PT1)

#Way 1
glance(lmfit_PT1)

#Way 2
tidy(lmfit_PT1)

plot_summs(lmfit_PT1)

#Trying ALL predictors of Picnic Table dataset 
lmog_PT<- linear_reg() %>%
  set_engine("lm")

lmall_PT<- lmog_PT %>% #Training 
  fit(Salmonella_Positive~., data=PT_Data)

lmall_PT

tidy(lmall_PT)

plot_summs(lmall_PT, robust=TRUE) #KP NOTE: I need to clean this up so it is a bit more readable, must fullscreen it
```


```{r} 
#### Model fit another way
# fit linear model using Salmonella_Pos as outcome, Table as predictor
lmfit3.0 <- lm(Salmonella_Positive~Table, PT_Data) 
lmfit3.0
plot(lmfit3.0)

# Here we place results from the above fit into a data frame via tidy function
lmtable1 <- broom::tidy(lmfit3.0)

#Let's check out the results
print(lmtable1)

#A different way Part Deux 
# I will do the same as above, however, I am now adding persistence pile
lmfit2 <- lm(Salmonella_Positive~Original_Persistence_Pile+Table, PT_Data) 
plot(lmfit2)

# Convert to a data frame via tidy function
lmtable2 <- broom::tidy(lmfit2)

#Results
print(lmtable2)
```


Second model fit
```{r}
#Doing the same for FEEDER DATA
lmog_FD<-linear_reg() %>% 
  set_engine("lm")

lmfit_FD<- lmog_FD %>% #Training; outcome: Salmonella Pos and Main Predictor Table
  fit(Absence_0_Presence_1~Feeder_number, FD_Data) 

lmfit_FD

glimpse(lmfit_FD)

#Way 1
glance(lmfit_FD)

#Way 2
tidy(lmfit_FD)

plot_summs(lmfit_FD)

#More fitting with some other indicators

lmog_FD2<-linear_reg() %>% 
  set_engine("lm")

lmfit_FD2<- lmog_FD2 %>% #Training; outcome: Salmonella Pos and Main Predictor Table
  fit(Absence_0_Presence_1~Feeder_number+Feeder_Type, FD_Data) 

lmfit_FD2

glimpse(lmfit_FD2)

#Way 1
glance(lmfit_FD2)

#Way 2
tidy(lmfit_FD2)

plot_summs(lmfit_FD2)

#Trying ALL predictors of Feeder dataset 
lmog_FD<- linear_reg() %>%
  set_engine("lm")

lmall_FD<- lmog_FD %>% #Training 
  fit(Absence_0_Presence_1~., data=FD_Data)

lmall_FD

tidy(lmall_FD)

plot_summs(lmall_FD, robust=TRUE) #KP NOTE: I need to clean this up so it is a bit more readable, must fullscreen it
```
# **IP Analysis KP finish by 4/9!!**

#**Time to event**
```{r}
#KP needs to edit this! Not running as expected....

library(finalfit)
library(forcats)
library(survival)

glimpse(PT_Data)

as.Date(PT_Data$Date, format= "%Y-%M-%D")

PT_Data$Date<- as.numeric(PT_Data$Date)

PT_Data = PT_Data %>% 
  mutate(
    Salmonella_Positive_os = ifelse(Salmonella_Positive == 0,1,0),
      status_crr= case_when(
        `Salmonella_Positive` == 1~0,
        `Salmonella_Positive` == 1~1)) 

dependent_crr= "Surv(Date, status_crr)"
explanatory= c("Table", "Quadrant", "Sample_Type")

PT_Data %>% finalfit(dependent_crr, explanatory)

PT_Data %>% 
   finalfit(dependent_crr, explanatory, add_dependent_label = FALSE) %>% 
    rename("Overall survival" = label) %>% 
    rename(" " = levels) %>% 
    rename("  " = all) 
```

#**Cox regression: Picnic Table Data**
```{r}

as.Date(PT_Data$Date, format= "%Y-%M-%D")

PT_Data$Date<- as.numeric(PT_Data$Date)

coxph(Surv(Date, Salmonella_Positive) ~ Sample_Type, PT_Data)

coxph(Surv(Date, Salmonella_Positive) ~ Sample_Type, PT_Data) %>%
  tbl_regression(exp=TRUE)
```
#**Cox regression: Feeder Data**
```{r}
library(lubridate)

#Date needs to be fixed in this DS

FD_Data <- FD_Data %>%
  mutate(Collection_Date=lubridate::dmy(Collection_Date))

FD_Data$Collection_Date<- as.numeric(FD_Data$Collection_Date)


coxph(Surv(Collection_Date, Absence_0_Presence_1 ~ Sample_Type, FD_Data))

coxph(Surv(Date, Salmonella_Positive) ~ Sample_Type, PT_Data) %>%
  tbl_regression(exp=TRUE)
```
